#!/usr/bin/ruby

#Pentagonal numbers are generated by the formula, Pn=n(3n1)/2. The first ten pentagonal numbers are:
#
#1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...
#
#It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70  22 = 48, is not pentagonal.
#
#Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference is pentagonal and D = |Pk  Pj| is minimised; what is the value of D?

a=[1,5]

def pent(n)
  n*(3*n-1)/2
end

def is_pent?(n)
  return true if (1+Math.sqrt(1+24*n))/6 % 1 == 0
  return false
end

#(2..10000).to_a.each do |n|
#  (1..n-1).to_a.reverse.each do |m|
#    if is_pent?(pent(n)+pent(m)) && is_pent?(pent(n)-pent(m))
#      p pent(n)-pent(m)
#      exit
#    end
#  end
#end

(2..10000).to_a.each do |n|
  b = pent(n+1)
  a.reverse.each do |c|
    if is_pent?(b+c) && a.include?(b-c)
      p b-c
      exit
    end
  end
  a << b
end

